




Steps:
- look up a series of communes in the DHS and see what are the parameters of getting political control through time
    ->  very unstructured, undoable in the same ways as population
    -> 2 ways to get it: from commune, or from lordship/seigneurerie
- get a map of the swiss municipalities with their properties listed
- create a rough datasets of political control through time

proposition:
- liste communes+anciennes communes in VD
- 


todo:
- DONE crosslink VD geometries with DHS entries for communes&anciennes communes
    -> DONE get all VD communes & anciennes communes
    -> DONE make a list of name of DHS communes vs list of geometries
        -> DONE make them both coherent
- DONE create communes' political entities
- DONE crawl all political entities from DHS to form basis
- create control links for every communes
    -> 1 file for communes PE, 1 file for higher-order PE
    -> look up communes' page
    -> move higher PE in hoPE file as needed
        -> consult their page as needed



Towards Neo4j
=====================================

problems:
- hand-json editing is tedious and error-prone
- neo4j provides the right tool to do what I want
-> using py2neo to create the required objects

Proposition:
- DONE think about graph model
    -> sources
    -> territories (~1850 communes)
    -> political entities
    -> links from territories, PE to sources
- WIP create py2neo routines for bulk creation
    - DONE create data model
    - add json-parsing to data model
    - fit existing json to data model expected json format
    - create script importing DHS jsons
- populate neo4j db with DHS entries
- add entries by hand

